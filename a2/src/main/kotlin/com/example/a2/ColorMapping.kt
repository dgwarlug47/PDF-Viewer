package com.example.a2

import javafx.scene.paint.Color
import java.util.Map

class ColorMapping {
    val NAMED_COLORS = Map.ofEntries(
        Map.entry("aliceblue", Color.ALICEBLUE),
        Map.entry("antiquewhite", Color.ANTIQUEWHITE),
        Map.entry("aqua", Color.AQUA),
        Map.entry("aquamarine", Color.AQUAMARINE),
        Map.entry("azure", Color.AZURE),
        Map.entry("beige", Color.BEIGE),
        Map.entry("bisque", Color.BISQUE),
        Map.entry("black", Color.BLACK),
        Map.entry("blanchedalmond", Color.BLANCHEDALMOND),
        Map.entry("blue", Color.BLUE),
        Map.entry("blueviolet", Color.BLUEVIOLET),
        Map.entry("brown", Color.BROWN),
        Map.entry("burlywood", Color.BURLYWOOD),
        Map.entry("cadetblue", Color.CADETBLUE),
        Map.entry("chartreuse", Color.CHARTREUSE),
        Map.entry("chocolate", Color.CHOCOLATE),
        Map.entry("coral", Color.CORAL),
        Map.entry("cornflowerblue", Color.CORNFLOWERBLUE),
        Map.entry("cornsilk", Color.CORNSILK),
        Map.entry("crimson", Color.CRIMSON),
        Map.entry("cyan", Color.CYAN),
        Map.entry("darkblue", Color.DARKBLUE),
        Map.entry("darkcyan", Color.DARKCYAN),
        Map.entry("darkgoldenrod", Color.DARKGOLDENROD),
        Map.entry("darkgray", Color.DARKGRAY),
        Map.entry("darkgreen", Color.DARKGREEN),
        Map.entry("darkgrey", Color.DARKGREY),
        Map.entry("darkkhaki", Color.DARKKHAKI),
        Map.entry("darkmagenta", Color.DARKMAGENTA),
        Map.entry("darkolivegreen", Color.DARKOLIVEGREEN),
        Map.entry("darkorange", Color.DARKORANGE),
        Map.entry("darkorchid", Color.DARKORCHID),
        Map.entry("darkred", Color.DARKRED),
        Map.entry("darksalmon", Color.DARKSALMON),
        Map.entry("darkseagreen", Color.DARKSEAGREEN),
        Map.entry("darkslateblue", Color.DARKSLATEBLUE),
        Map.entry("darkslategray", Color.DARKSLATEGRAY),
        Map.entry("darkslategrey", Color.DARKSLATEGREY),
        Map.entry("darkturquoise", Color.DARKTURQUOISE),
        Map.entry("darkviolet", Color.DARKVIOLET),
        Map.entry("deeppink", Color.DEEPPINK),
        Map.entry("deepskyblue", Color.DEEPSKYBLUE),
        Map.entry("dimgray", Color.DIMGRAY),
        Map.entry("dimgrey", Color.DIMGREY),
        Map.entry("dodgerblue", Color.DODGERBLUE),
        Map.entry("firebrick", Color.FIREBRICK),
        Map.entry("floralwhite", Color.FLORALWHITE),
        Map.entry("forestgreen", Color.FORESTGREEN),
        Map.entry("fuchsia", Color.FUCHSIA),
        Map.entry("gainsboro", Color.GAINSBORO),
        Map.entry("ghostwhite", Color.GHOSTWHITE),
        Map.entry("gold", Color.GOLD),
        Map.entry("goldenrod", Color.GOLDENROD),
        Map.entry("gray", Color.GRAY),
        Map.entry("green", Color.GREEN),
        Map.entry("greenyellow", Color.GREENYELLOW),
        Map.entry("grey", Color.GREY),
        Map.entry("honeydew", Color.HONEYDEW),
        Map.entry("hotpink", Color.HOTPINK),
        Map.entry("indianred", Color.INDIANRED),
        Map.entry("indigo", Color.INDIGO),
        Map.entry("ivory", Color.IVORY),
        Map.entry("khaki", Color.KHAKI),
        Map.entry("lavender", Color.LAVENDER),
        Map.entry("lavenderblush", Color.LAVENDERBLUSH),
        Map.entry("lawngreen", Color.LAWNGREEN),
        Map.entry("lemonchiffon", Color.LEMONCHIFFON),
        Map.entry("lightblue", Color.LIGHTBLUE),
        Map.entry("lightcoral", Color.LIGHTCORAL),
        Map.entry("lightcyan", Color.LIGHTCYAN),
        Map.entry("lightgoldenrodyellow", Color.LIGHTGOLDENRODYELLOW),
        Map.entry("lightgray", Color.LIGHTGRAY),
        Map.entry("lightgreen", Color.LIGHTGREEN),
        Map.entry("lightgrey", Color.LIGHTGREY),
        Map.entry("lightpink", Color.LIGHTPINK),
        Map.entry("lightsalmon", Color.LIGHTSALMON),
        Map.entry("lightseagreen", Color.LIGHTSEAGREEN),
        Map.entry("lightskyblue", Color.LIGHTSKYBLUE),
        Map.entry("lightslategray", Color.LIGHTSLATEGRAY),
        Map.entry("lightslategrey", Color.LIGHTSLATEGREY),
        Map.entry("lightsteelblue", Color.LIGHTSTEELBLUE),
        Map.entry("lightyellow", Color.LIGHTYELLOW),
        Map.entry("lime", Color.LIME),
        Map.entry("limegreen", Color.LIMEGREEN),
        Map.entry("linen", Color.LINEN),
        Map.entry("magenta", Color.MAGENTA),
        Map.entry("maroon", Color.MAROON),
        Map.entry("mediumaquamarine", Color.MEDIUMAQUAMARINE),
        Map.entry("mediumblue", Color.MEDIUMBLUE),
        Map.entry("mediumorchid", Color.MEDIUMORCHID),
        Map.entry("mediumpurple", Color.MEDIUMPURPLE),
        Map.entry("mediumseagreen", Color.MEDIUMSEAGREEN),
        Map.entry("mediumslateblue", Color.MEDIUMSLATEBLUE),
        Map.entry("mediumspringgreen", Color.MEDIUMSPRINGGREEN),
        Map.entry("mediumturquoise", Color.MEDIUMTURQUOISE),
        Map.entry("mediumvioletred", Color.MEDIUMVIOLETRED),
        Map.entry("midnightblue", Color.MIDNIGHTBLUE),
        Map.entry("mintcream", Color.MINTCREAM),
        Map.entry("mistyrose", Color.MISTYROSE),
        Map.entry("moccasin", Color.MOCCASIN),
        Map.entry("navajowhite", Color.NAVAJOWHITE),
        Map.entry("navy", Color.NAVY),
        Map.entry("oldlace", Color.OLDLACE),
        Map.entry("olive", Color.OLIVE),
        Map.entry("olivedrab", Color.OLIVEDRAB),
        Map.entry("orange", Color.ORANGE),
        Map.entry("orangered", Color.ORANGERED),
        Map.entry("orchid", Color.ORCHID),
        Map.entry("palegoldenrod", Color.PALEGOLDENROD),
        Map.entry("palegreen", Color.PALEGREEN),
        Map.entry("paleturquoise", Color.PALETURQUOISE),
        Map.entry("palevioletred", Color.PALEVIOLETRED),
        Map.entry("papayawhip", Color.PAPAYAWHIP),
        Map.entry("peachpuff", Color.PEACHPUFF),
        Map.entry("peru", Color.PERU),
        Map.entry("pink", Color.PINK),
        Map.entry("plum", Color.PLUM),
        Map.entry("powderblue", Color.POWDERBLUE),
        Map.entry("purple", Color.PURPLE),
        Map.entry("red", Color.RED),
        Map.entry("rosybrown", Color.ROSYBROWN),
        Map.entry("royalblue", Color.ROYALBLUE),
        Map.entry("saddlebrown", Color.SADDLEBROWN),
        Map.entry("salmon", Color.SALMON),
        Map.entry("sandybrown", Color.SANDYBROWN),
        Map.entry("seagreen", Color.SEAGREEN),
        Map.entry("seashell", Color.SEASHELL),
        Map.entry("sienna", Color.SIENNA),
        Map.entry("silver", Color.SILVER),
        Map.entry("skyblue", Color.SKYBLUE),
        Map.entry("slateblue", Color.SLATEBLUE),
        Map.entry("slategray", Color.SLATEGRAY),
        Map.entry("slategrey", Color.SLATEGREY),
        Map.entry("snow", Color.SNOW),
        Map.entry("springgreen", Color.SPRINGGREEN),
        Map.entry("steelblue", Color.STEELBLUE),
        Map.entry("tan", Color.TAN),
        Map.entry("teal", Color.TEAL),
        Map.entry("thistle", Color.THISTLE),
        Map.entry("tomato", Color.TOMATO),
        Map.entry("transparent", Color.TRANSPARENT),
        Map.entry("turquoise", Color.TURQUOISE),
        Map.entry("violet", Color.VIOLET),
        Map.entry("wheat", Color.WHEAT),
        Map.entry("white", Color.WHITE),
        Map.entry("whitesmoke", Color.WHITESMOKE),
        Map.entry("yellow", Color.YELLOW),
        Map.entry("yellowgreen", Color.YELLOWGREEN)
    )
    val REVERSED_NAMED_COLORS = HashMap<Color, String>()
    init {
        for ((key, value) in NAMED_COLORS.entries) {
            REVERSED_NAMED_COLORS[value] = key
        }
    }
}